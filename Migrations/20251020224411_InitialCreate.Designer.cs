// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackendAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251020224411_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PPAI_backend.models.entities.CambioEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EstadoNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaHoraFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OrdenDeInspeccionNumeroOrden")
                        .HasColumnType("integer");

                    b.Property<int?>("SismografoIdentificadorSismografo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EstadoNombre");

                    b.HasIndex("OrdenDeInspeccionNumeroOrden");

                    b.HasIndex("SismografoIdentificadorSismografo");

                    b.ToTable("CambiosEstado");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Empleado", b =>
                {
                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RolNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Mail");

                    b.HasIndex("RolNombre");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.EstacionSismologica", b =>
                {
                    b.Property<int>("CodigoEstacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodigoEstacion"));

                    b.Property<bool>("DocumentoCertificacionAdq")
                        .HasColumnType("boolean");

                    b.Property<string>("EmpleadoMail")
                        .HasColumnType("text");

                    b.Property<string>("EstadoNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaSolicitudCertificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Latitud")
                        .HasColumnType("double precision");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NroCertificacionAdquirida")
                        .HasColumnType("integer");

                    b.Property<int>("SismografoIdentificadorSismografo")
                        .HasColumnType("integer");

                    b.HasKey("CodigoEstacion");

                    b.HasIndex("EmpleadoMail");

                    b.HasIndex("EstadoNombre");

                    b.HasIndex("SismografoIdentificadorSismografo");

                    b.ToTable("EstacionesSismologicas");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Estado", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Ambito")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Nombre");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.MotivoFueraDeServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CambioEstadoId")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<int>("TipoMotivoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CambioEstadoId");

                    b.HasIndex("TipoMotivoId");

                    b.ToTable("MotivosFueraDeServicio");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.OrdenDeInspeccion", b =>
                {
                    b.Property<int>("NumeroOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumeroOrden"));

                    b.Property<string>("EmpleadoMail")
                        .HasColumnType("text");

                    b.Property<int>("EstacionSismologicaCodigoEstacion")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoNombre")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaHoraCierre")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaHoraFinalizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ObservacionCierre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NumeroOrden");

                    b.HasIndex("EmpleadoMail");

                    b.HasIndex("EstacionSismologicaCodigoEstacion");

                    b.HasIndex("EstadoNombre");

                    b.ToTable("OrdenesDeInspeccion");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Rol", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Nombre");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHoraFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioNombreUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioNombreUsuario");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Sismografo", b =>
                {
                    b.Property<int>("IdentificadorSismografo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdentificadorSismografo"));

                    b.Property<DateTime>("FechaAdquisicion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NroSerie")
                        .HasColumnType("integer");

                    b.HasKey("IdentificadorSismografo");

                    b.ToTable("Sismografos");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.TipoMotivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposMotivo");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Usuario", b =>
                {
                    b.Property<string>("NombreUsuario")
                        .HasColumnType("text");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpleadoMail")
                        .HasColumnType("text");

                    b.HasKey("NombreUsuario");

                    b.HasIndex("EmpleadoMail");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.CambioEstado", b =>
                {
                    b.HasOne("PPAI_backend.models.entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoNombre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPAI_backend.models.entities.OrdenDeInspeccion", null)
                        .WithMany("CambioEstado")
                        .HasForeignKey("OrdenDeInspeccionNumeroOrden");

                    b.HasOne("PPAI_backend.models.entities.Sismografo", null)
                        .WithMany("CambioEstado")
                        .HasForeignKey("SismografoIdentificadorSismografo");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Empleado", b =>
                {
                    b.HasOne("PPAI_backend.models.entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolNombre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.EstacionSismologica", b =>
                {
                    b.HasOne("PPAI_backend.models.entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoMail");

                    b.HasOne("PPAI_backend.models.entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoNombre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPAI_backend.models.entities.Sismografo", "Sismografo")
                        .WithMany()
                        .HasForeignKey("SismografoIdentificadorSismografo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Estado");

                    b.Navigation("Sismografo");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.MotivoFueraDeServicio", b =>
                {
                    b.HasOne("PPAI_backend.models.entities.CambioEstado", null)
                        .WithMany("Motivos")
                        .HasForeignKey("CambioEstadoId");

                    b.HasOne("PPAI_backend.models.entities.TipoMotivo", "TipoMotivo")
                        .WithMany()
                        .HasForeignKey("TipoMotivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMotivo");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.OrdenDeInspeccion", b =>
                {
                    b.HasOne("PPAI_backend.models.entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoMail");

                    b.HasOne("PPAI_backend.models.entities.EstacionSismologica", "EstacionSismologica")
                        .WithMany()
                        .HasForeignKey("EstacionSismologicaCodigoEstacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPAI_backend.models.entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoNombre");

                    b.Navigation("Empleado");

                    b.Navigation("EstacionSismologica");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Sesion", b =>
                {
                    b.HasOne("PPAI_backend.models.entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioNombreUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Usuario", b =>
                {
                    b.HasOne("PPAI_backend.models.entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoMail");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.CambioEstado", b =>
                {
                    b.Navigation("Motivos");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.OrdenDeInspeccion", b =>
                {
                    b.Navigation("CambioEstado");
                });

            modelBuilder.Entity("PPAI_backend.models.entities.Sismografo", b =>
                {
                    b.Navigation("CambioEstado");
                });
#pragma warning restore 612, 618
        }
    }
}
